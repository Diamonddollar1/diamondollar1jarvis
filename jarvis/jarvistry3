# note for me; 1) change voice
# email add document feature
# opean camera not working
# put more songs in songs and beats directory
# connect os
# face recognition
#  change browser
#personalise news not working
#switch window not working

from re import U
from urllib import request
from PyQt5 import QtWidgets, QtGui, QtCore
from PyQt5 import QTimer , QTime  , QDate , Qt
from PyQt5.QtGui import QMovie
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.uic import loadUiType
import wikipedia 
import ntpath
import pyttsx3
import speech_recognition as sr 
import datetime
import webbrowser
import os
import cv2
import sys
import random
from requests import get
import smtplib
import pyjokes
import pywhatkit
import features  
from jarvis import Ui_Form

flags = QtCore.Qt.WindowFlags(QtCore.Qt.FramelessWindowHint)


engine = pyttsx3.init('sapi5')
voices = engine.getProperty("voices")
volume = engine.getProperty('volume')
engine.setProperty("voice", voices[0].id)
engine.setProperty("rate", 230)
engine.setProperty('volume', 1.80)
engine.runAndWait()


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wish():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning Sir!")

    elif hour>=12 and hour<18:
        speak("Good Afternoon Sir!")   

    else:
        speak("Good Evening Sir!")  

    speak("How May I Help You")       


def news():
    main_url = 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=5a44b9a7e12b48f2817d9c7714a646b2'

    main_page = request.get(main_url).json()
    # print(main_page)
    articles = main_page["articles"]
    #print(articles)
    head = []
    day=["first","second","third","fourth","fifth"]
    for ar in articles:
        head.append(ar["title"])
    for i in range (len(day)):
        #print(f"today's {day[i]} news is:", head[i])
        speak(f"today's {day[i]} news is: {head[i]}")

def sendEmail(to,content): 
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('rohansjarvis@gmail.com', 'qpcwsmqriqqknyzs')
    server.sendmail('rohansjarvis@gmail.com', to, content)
    server.close()

def kelvinConvert(kelvin):
    '''
    Converts the Inputed Kelvin Value into Fahrenheit and Celsius.
    '''
    celsius = kelvin - 273.15
    fahrenheit = celsius * (9/5) + 32
    return celsius, fahrenheit
    
class MainThread(QThread):
    def __init__(self):
        super(MainThread,self).__init__()
    
    def run(self):
        self.TaskExecution()
        
    def takeCommand(self): 
        #It takes microphone input from the user and returns string output

        r = sr.Recognizer()
        with sr.Microphone() as source:
            print("Listening...")
            r.pause_threshold = 1
            audio = r.listen(source, timeout=5,phrase_time_limit=5)

        try:
            print("Recognizing...")    
            self.query = r.recognize_google(audio, language='en-in')
            print(f"User: {self.query}")

        except Exception as e:
            # print(e)    
            print("Pardon")  
            return "none"
        return self.query


    def TaskExecution(self):
     wish()
     while True:    
     # if 1:
        self.query = takeCommand().lower()

        # Logic for executing tasks based on self.query
        if 'wikipedia' in self.query:
             speak('Searching in Wikipedia...')
             self.query = self.query.replace("wikipedia", "")
             results = wikipedia.summary(self.query, sentences=2)
               # extennd the num 2 to increase how much it reads form wiki
             speak("According to Wikipedia")
             print(results)
             speak(results)
        #print(results)

        elif 'set alarm' in self.query:
            from features import Alarm
            speak("sir for when should i set an alarm")
            self.query = takeCommand()
            Alarm(self.query)

        elif "search on google" in self.query:
            self.query = str(self.query).replace("google","")
            self.query = self.query.replace("search","").replace("search google", "").replace("google search", "")
            speak("what should i search sir")
            self.query = takeCommand()
            pywhatkit.search(self.query)
        
        elif "search in google" in self.query:
            self.query = str(self.query).replace("google","")
            self.query = self.query.replace("search","").replace("search google", "").replace("google search", "")
            speak("what should i search sir")
            self.query = takeCommand()
            pywhatkit.search(self.query)

        elif "search on the google" in self.query:
            self.query = str(self.query).replace("google","")
            self.query = self.query.replace("search","").replace("search google", "").replace("google search", "")
            speak("what should i search sir")
            self.query = takeCommand()
            pywhatkit.search(self.query)

        elif "search in the google" in self.query:
            self.query = str(self.query).replace("google","")
            self.query = self.query.replace("search","").replace("search google", "").replace("google search", "")
            speak("what should i search sir")
            self.query = takeCommand()
            pywhatkit.search(self.query)

        elif "search google" in self.query:
            self.query = str(self.query).replace("google","")
            self.query = self.query.replace("search","").replace("search google", "").replace("google search", "")
            speak("what should i search sir")
            self.query = takeCommand()
            pywhatkit.search(self.query)

        elif  "google search" in self.query:
            self.query = str(self.query).replace("google","")
            self.query = self.query.replace("search","").replace("search google", "").replace("google search", "")
            speak("what should i search sir")
            self.query = takeCommand()
            pywhatkit.search(self.query)

        elif "search on youtube" in self.query:
             speak("Sir what should I search")
             self.query = takeCommand()
             self.query = str(self.query).replace("search on youtube for", "")
             self.query = self.query.replace("search on youtube", "").replace("search youtube", "").replace("youtube search", "").replace("on youtube", "")
             self.query = self.query.replace(" ", "+")
             yt_URL = "https://youtube.com/results?search_self.query=" + self.query + "/"
             webbrowser.open(yt_URL, new=1, autoraise=True)

        elif "search in youtube" in self.query:
             speak("Sir what should I search")
             self.query = takeCommand()
             self.query = str(self.query).replace("search on youtube for", "")
             self.query = self.query.replace("search on youtube", "").replace("search youtube", "").replace("youtube search", "").replace("on youtube", "")
             self.query = self.query.replace(" ", "+")
             yt_URL = "https://youtube.com/results?search_self.query=" + self.query + "/"
             webbrowser.open(yt_URL, new=1, autoraise=True)
        
        elif "search the youtube" in self.query:
             speak("Sir what should I search")
             self.query = takeCommand()
             self.query = str(self.query).replace("search on youtube for", "")
             self.query = self.query.replace("search on youtube", "").replace("search youtube", "").replace("youtube search", "").replace("on youtube", "")
             self.query = self.query.replace(" ", "+")
             yt_URL = "https://youtube.com/results?search_self.query=" + self.query + "/"
             webbrowser.open(yt_URL, new=1, autoraise=True)

        elif "search youtube" in self.query:
             speak("Sir what should I search")
             self.query = takeCommand()
             self.query = str(self.query).replace("search on youtube for", "")
             self.query = self.query.replace("search on youtube", "").replace("search youtube", "").replace("youtube search", "").replace("on youtube", "")
             self.query = self.query.replace(" ", "+")
             yt_URL = "https://youtube.com/results?search_self.query=" + self.query + "/"
             webbrowser.open(yt_URL, new=1, autoraise=True)

        elif "youtube search" in self.query:
             speak("Sir what should I search")
             self.query = takeCommand()
             self.query = str(self.query).replace("search on youtube for", "")
             self.query = self.query.replace("search on youtube", "").replace("search youtube", "").replace("youtube search", "").replace("on youtube", "")
             self.query = self.query.replace(" ", "+")
             yt_URL = "https://youtube.com/results?search_self.query=" + self.query + "/"
             webbrowser.open(yt_URL, new=1, autoraise=True)



        elif 'open whatsapp' in self.query:
            webbrowser.open("whatsapp.com") 



        elif 'open youtube' in self.query:
            webbrowser.open("youtube.com")

        elif 'open google' in self.query:
            webbrowser.open("google.com")

        elif 'open stackoverflow' in self.query:
            webbrowser.open("stackoverflow.com")   

        elif 'open anime' in self.query:
            webbrowser.open("zoro.to")   

        elif 'open manga' in self.query:
            webbrowser.open("mangareader.to")   

        elif 'open amazon' in self.query:
            webbrowser.open("amazon.in") 

        elif 'open flipkart' in self.query:
            webbrowser.open("flipkart.com") 

        elif 'open prime' in self.query:
            webbrowser.open("primevideo.com") 

        elif 'open netflix' in self.query:
            webbrowser.open("netflix.com") 

        elif 'open hotstar' in self.query:
            webbrowser.open("hotstar.com") 

        elif 'open github' in self.query:
            webbrowser.open("github.com") 

        elif "close notepad" in self.query:
            speak("okay sir, closing notead")
            os.system("taskkill /f /im notepad.exe")

        elif "close notes" in self.query:
            speak("okay sir, closing notead")
            os.system("taskkill /f /im notepad.exe")

        elif "close code" in self.query:
            speak("okay sir, closing code")
            os.system("taskkill /f /im Code.exe")

        elif "close visual studio" in self.query:
            speak("okay sir, closing code")
            os.system("taskkill /f /im Code.exe")

        elif 'play music' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\music'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'play the music' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\music'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'play my music' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\music'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'drop the beat' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\my beats'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'drop my beat' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\my beats'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'play my beat' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\my beats'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'play the beat' in self.query:
            music_dir = 'C:\\Users\\LENOVO\\Desktop\\All other files\\jarvis\\my beats'
            songs = os.listdir(music_dir)
            rd= random.choice(songs) 
            os.startfile(os.path.join(music_dir, rd))

        elif 'time' in self.query:
            strTime = datetime.datetime.now().strftime("%H:%M")    
            speak(f"Sir, the time is {strTime}")

        elif 'date' in self.query:
            date = datetime.date.today()
            speak(f"Today is {date}.")

        elif 'day' in self.query:
            day = datetime.datetime.now().strftime("%A")
            speak(f"It is {day} today!")

        elif 'temperature' in self.query:
            tem

        elif 'open code' in self.query:
            codePath = "C:\\Users\\LENOVO\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)

        elif 'open visual studio' in self.query:
            codePath = "C:\\Users\\LENOVO\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)
        
        elif 'open notes' in self.query:
            ntpath = "C:\\WINDOWS\\system32\\notepad.exe"
            os.startfile(ntpath)
        
        elif 'open notepad' in self.query:
            ntpath = "C:\\WINDOWS\\system32\\notepad.exe"
            os.startfile(ntpath)   

        elif 'open command prompt' in self.query:
            os.startfile("start cmd")

        elif 'open cmd' in self.query:
            os.startfile("start cmd")

        elif 'open camera' in self.query:
            cap = cv2.VideoCapture(0) #0 because using internal camer , if using external switch to 1 , etc
            while True:
              ret, img = cap.read()
              cv2.inshow('', img)
              k = cv2.waitKey(50)
              if k ==27:
                break;
            cap.release()
            cv2.destroyAllWindows()

        elif "ip address" in self.query:
            ip = get('https://api.ipify.org').text
            print(ip)
            speak(f"your IP address is {ip}")

        elif"tell me a joke" in self.query:
            joke = pyjokes.get_joke()
            speak(joke)

        elif "close program" in self.query:
            speak("Thanks for using me Sir. See you later")
            sys.exit()

        elif "exit" in self.query:
            speak("Thanks for using me Sir. See you later")
            sys.exit()

        elif "exit the program" in self.query:
            speak("Thanks for using me Sir. See you later")
            sys.exit()


        elif "close the program" in self.query:
            speak("Thanks for using me Sir. See you later")
            sys.exit()

        elif "shut down the system" in self.query:
            os.system("shutdown /s /t 5")

        elif "shut down" in self.query:
            os.system("shutdown /s /t 5")

        elif "shut down system" in self.query:
            os.system("shutdown /s /t 5")

        elif "shut down my system" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart the system" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart my system" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart system" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart" in self.query:
            os.system("shutdown /s /t 5")

        elif "shut down the computer" in self.query:
            os.system("shutdown /s /t 5")

        elif "shut down computer" in self.query:
            os.system("shutdown /s /t 5")

        elif "shut down my computer" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart the computer" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart computer" in self.query:
            os.system("shutdown /s /t 5")

        elif "restart my computer" in self.query:
            os.system("shutdown /s /t 5")

        elif "sleep" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif "sleep the system" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif "sleep system" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif "sleep my system" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif "sleep the computer" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif "sleep computer" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif "sleep my computer" in self.query:
            os.system("rund1132.exe powerprof.dil,SetSuspendState 0,1,0")

        elif"tell me some news" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"tell some news" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"tell me the news" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"update me with whats going on " in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"what is going on in news" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"what is going on on news" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"what are todays headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"todays headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"latest headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"todays news" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()
        
        elif"update me with some headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"update me with headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"update me with some headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif"update me with todays headlines" in self.query:
            speak("Just a minute Sir feteching some of the latest news")
            news()

        elif "email to dad" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "bhaskaran.srinivasan@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email dad" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "bhaskaran.srinivasan@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif " send email to dad" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "bhaskaran.srinivasan@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail to dad" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "bhaskaran.srinivasan@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail dad" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "bhaskaran.srinivasan@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send mail to dad" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "bhaskaran.srinivasan@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email to mom" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "kalpanab81@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email mom" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "kalpanab81@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send email to mom" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "kalpanab81@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail to mom" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "kalpanab81@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail mom" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "kalpanab81@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send mail to mom" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "kalpanab81@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email to rohan" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email rohan" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail rohan" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send email to rohan" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail to rohan" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send mail to rohan" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email to myself" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "email myself" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send email to myself" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail to myself" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "send mail to myself" in self.query:
            try:
                speak("what should I say in the email sir")
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")

        elif "mail myself" in self.query:
            try:
                content = takeCommand().lower()
                to = "rohanhyd07@gmail.com"
                sendEmail(to,content)
                speak("Email has succesfully sent sir")

            except Exception as e:
                print(e)
                speak("Sorry sir the email couldnt be sent")



startExecution = MainThread()

class Main(QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_jarvisUi()
        self.setupUi(self)
        self.ui.pushButton.clicked.connect(self.close)
    
    def startTask(self):
        self.ui.movie = QtGui.QMovie("C:/newPrefix/be92f51ef908d53c0c74d5e06a59365e.gif")
        self.ui.label12.setMovie(self.ui.movie)
        self.ui.movie.start()
        self.ui.movie = QtGui.QMovie("c:/newPrefix/14301c7116f1ef503964cbfff0241a04.gif")
        self.ui.label8.setMovie(self.ui.movie)
        self.ui.movie.start()
        self.ui.movie = QtGui.QMovie("c:/newPrefix/9159b2f608c6685c6b3e0d20cfe388fb_w200.gif")
        self.ui.label4.setMovie(self.ui.movie)
        self.ui.movie.start()
        self.ui.movie = QtGui.QMovie("c:/newPrefix/0ef3bb66d9216fffcea9022628f7bb26.gif")
        self.ui.label13.setMovie(self.ui.movie)
        self.ui.movie.start()
        timer = QTimer(self)
        timer.timeout.connect(self.showTime)
        timer.start(1000)
        startExecution.start()
    
    def showTime(self):
        current_time = QTime.currentTime()
        current_date = QDate.currentDate()
        label_time = current_time.toString('hh:mm:ss')
        label_date = current_date.toString(Qt.ISODate)
        


app = QtWidgets.QApplication(sys.argv)
main = Main()
main.show()
exit(app.exec_())